<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>ejholmes.github.com</title>
 <link href="http://ejholmes.github.com/atom.xml" rel="self"/>
 <link href="http://ejholmes.github.com/"/>
 <updated>2012-12-02T00:39:37-08:00</updated>
 <id>http://ejholmes.github.com/</id>
 <author>
   <name>Eric Holmes</name>
   <email>eric@ejholmes.net</email>
 </author>

 
 <entry>
   <title>Handling mass assignment with Active Admin</title>
   <link href="http://ejholmes.github.com/2012/04/22/handling-mass-assignment-with-active-admin.html"/>
   <updated>2012-04-22T00:00:00-07:00</updated>
   <id>http://ejholmes.github.com/2012/04/22/handling-mass-assignment-with-active-admin</id>
   <content type="html">&lt;p&gt;With the recent &lt;a href=&quot;https://github.com/blog/1068-public-key-security-vulnerability-and-mitigation&quot;&gt;Github security vulnerability&lt;/a&gt;,
a lot of people have been paying closer attention to security in their Rails
applications, mainly when dealing with &lt;a href=&quot;http://guides.rubyonrails.org/security.html#mass-assignment&quot;&gt;mass assignment&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, locking down mass assignment can be very inconvenient when dealing
with admin interfaces where you need to allow certain users to mass assign
attributes that a regular user shouldn't be able to do. Fortunately, there's
an easy way to get past this by using Rails 3.1's &lt;a href=&quot;http://launchware.com/articles/whats-new-in-edge-scoped-mass-assignment-in-rails-3-1&quot;&gt;scoped mass assignment&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Scoped Mass Assignment&lt;/h3&gt;

&lt;p&gt;Scoped mass assignment allows you to assign a set of attributes to a certain
'scope' that you can then specify when calling &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;update_attributes&lt;/code&gt;.
Essentially, it allows you to do something like this:&lt;/p&gt;

&lt;p&gt;The above code will only allow the &lt;code&gt;published&lt;/code&gt; attribute to be mass assigned if the
current user is an admin.&lt;/p&gt;

&lt;h3&gt;Scoped Mass Assignment with Active Admin&lt;/h3&gt;

&lt;p&gt;Scoped mass assignment works fine when we're writing the controllers ourselves,
but how do we assign a scope when using active admin, where controllers are
automatically created for us? Well, fortunately, active admin makes use of
&lt;a href=&quot;https://github.com/josevalim/inherited_resources&quot;&gt;inherited_resources&lt;/a&gt;, which
provides a class method called &lt;code&gt;with_role&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;By appending a few lines of code to our active admin initializer, we can assign
the admin scope to all model calls while under the admin interface:&lt;/p&gt;

&lt;p&gt;Now, whenever a post is created or updated by a user using the admin interface, the
&lt;code&gt;:admin&lt;/code&gt; scope will be used, which will allow the &lt;code&gt;published&lt;/code&gt; attribute to be
mass assigned.&lt;/p&gt;

&lt;p&gt;If we had a &lt;code&gt;role&lt;/code&gt; field on our AdminUser model we could even take this a step
further by overriding the &lt;code&gt;role_given?&lt;/code&gt; and &lt;code&gt;as_role&lt;/code&gt; methods:&lt;/p&gt;

&lt;p&gt;Now, we can easily set the security for these roles in our model:&lt;/p&gt;

&lt;h3&gt;Related Resources&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://railscasts.com/episodes/237-dynamic-attr-accessible&quot;&gt;Railscasts: #237 Dynamic attr_accessible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://launchware.com/articles/whats-new-in-edge-scoped-mass-assignment-in-rails-3-1&quot;&gt;Rails 3.1 scoped mass assignment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Salesforce OAuth2 authentication with Active Admin</title>
   <link href="http://ejholmes.github.com/2012/04/08/active-admin-with-omniauth.html"/>
   <updated>2012-04-08T00:00:00-07:00</updated>
   <id>http://ejholmes.github.com/2012/04/08/active-admin-with-omniauth</id>
   <content type="html">&lt;p&gt;Here's a quick and dirty guide to get OAuth2 authentication working for Active
Admin using the Salesforce strategy.&lt;/p&gt;

&lt;h3&gt;Instructions&lt;/h3&gt;

&lt;p&gt;Add the omniauth gem to your Gemfile and run &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;path&quot;&gt;Gemfile&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Configure devise to use the Salesforce strategy for omniauth.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;path&quot;&gt;config/initializers/devise.rb&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Add &lt;code&gt;:omniauthable&lt;/code&gt; to the &lt;code&gt;devise&lt;/code&gt; call in the &lt;code&gt;AdminUser&lt;/code&gt; model and add a
class method for retrieving the admin user based on the oauth access token.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;path&quot;&gt;app/models/admin_user.rb&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Add an omniauth controller to the &lt;code&gt;devise_for&lt;/code&gt; call in the routes file.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;path&quot;&gt;config/routes.rb&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Add a controller to handle the omniauth callback.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;path&quot;&gt;app/controllers/admin_users/omniauth_callbacks_controller.rb&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Override the Active Admin login page in your application and add a link to sign
in using Salesforce.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;path&quot;&gt;app/views/active_admin/devise/sessions/new.html.erb&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Metaforce - A Ruby gem for interacting with the SFDC Metadata API</title>
   <link href="http://ejholmes.github.com/2012/01/27/metaforce-a-ruby-gem-for-interacting-with-the-sfdc-metadata-api.html"/>
   <updated>2012-01-27T15:15:36-08:00</updated>
   <id>http://ejholmes.github.com/2012/01/27/metaforce-a-ruby-gem-for-interacting-with-the-sfdc-metadata-api</id>
   <content type="html">&lt;p&gt;I'd like to introduce you to a little pet project I've been working on in my
spare time; &lt;a href=&quot;https://github.com/ejholmes/metaforce&quot;&gt;Metaforce&lt;/a&gt;. Metaforce is a
Ruby gem that abstracts the &lt;a href=&quot;http://www.salesforce.com/us/developer/docs/api_meta/index.htm&quot;&gt;Salesforce Metadata API&lt;/a&gt;,
which is a Soap based API for CRUD'ing metadata on Salesforce organizations.&lt;/p&gt;

&lt;p&gt;Why, you ask? Mainly because I don't like Ant or the Migration tool. I'd much
rather use Rake for migrations than bother with Java based tools. And hey, it's
fun. Not only that, but because it's a gem, other developers can build awesome
tools on top of it, whether that's in Rails, Sinatra, or whatever you please,
without having to delve into the nitty gritty of the Soap API.&lt;/p&gt;

&lt;p&gt;You can get started with Metaforce by installing it:&lt;/p&gt;

&lt;p&gt;Once installed, using it is as simple as configuring your credentials:&lt;/p&gt;

&lt;p&gt;And then performing the task you want to do. For example, if you want to list
all metadata types on your organization, you can call &lt;code&gt;.describe&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And it will return a hash with the results.&lt;/p&gt;

&lt;p&gt;Or if you want to list the members of a particular metadata type, you can call
&lt;code&gt;.list&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can even deploy code to an organization:&lt;/p&gt;

&lt;p&gt;Metaforce is currently under active development and there's a lot of features I'd
like to add. You should only use it for testing right now.&lt;/p&gt;

&lt;p&gt;For more information, &lt;a href=&quot;https://github.com/ejholmes/metaforce&quot;&gt;check out the project on GitHub&lt;/a&gt;,
and don't be afraid to browse through the &lt;a href=&quot;https://github.com/ejholmes/metaforce/tree/develop/spec&quot;&gt;specs&lt;/a&gt;
for example usage.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to Install rbenv on OS X</title>
   <link href="http://ejholmes.github.com/2012/01/24/how-to-setup-rbenv.html"/>
   <updated>2012-01-24T00:00:00-08:00</updated>
   <id>http://ejholmes.github.com/2012/01/24/how-to-setup-rbenv</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/sstephenson/rbenv&quot;&gt;rbenv&lt;/a&gt; is a tool for managing
ruby versions. It's similar to &lt;a href=&quot;http://beginrescueend.com/&quot;&gt;RVM&lt;/a&gt; but doesn't require
configuration files. Instead of using gemsets, the user is expected to make
use of &lt;a href=&quot;http://gembundler.com/&quot;&gt;bundler&lt;/a&gt; to manage gem dependencies.&lt;/p&gt;

&lt;h3&gt;Installation&lt;/h3&gt;

&lt;p&gt;Install rbenv from GitHub:&lt;/p&gt;

&lt;p&gt;Add the following lines to your &lt;code&gt;~/.zshrc&lt;/code&gt; or &lt;code&gt;~/.bash_profile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Restart your terminal then install &lt;a href=&quot;https://github.com/sstephenson/ruby-build&quot;&gt;ruby-build&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Install the latest version of Ruby (&lt;code&gt;1.9.3-p0&lt;/code&gt;) and activate it:&lt;/p&gt;

&lt;p&gt;Restart the terminal again, then update RubyGems:&lt;/p&gt;

&lt;p&gt;rbenv makes use of shims for all binaries, including gems. When you install a
new gem, you need to run &lt;code&gt;rbenv rehash&lt;/code&gt; to generate the shims. This can be done
automatically by installing the &lt;code&gt;rbenv-rehash&lt;/code&gt; gem:&lt;/p&gt;

&lt;p&gt;Last but not least, you'll probably want to install bundler:&lt;/p&gt;

&lt;p&gt;rbenv can make use of gemsets by installing the &lt;a href=&quot;https://github.com/jamis/rbenv-gemset&quot;&gt;rbenv-gemset&lt;/a&gt;
plugin, however, the preferred method is to use bundler to manage gem dependencies. If
you use &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;oh my zsh&lt;/a&gt;, you can
activate the bundler plugin, which allows you to run gem executables without
prefixing them with &lt;code&gt;bundle exec&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Just add the following to your &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;And, just in case you want a system wide installation on a linux server, here's
the code to set that up on Ubuntu 10.04, courtesy of &lt;a href=&quot;https://gist.github.com/benwoodward&quot;&gt;@benwoodward&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/1521316.js?file=rbenv-install-system-wide.sh&quot;&gt;&lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Force.com syntax highlighting for VIM</title>
   <link href="http://ejholmes.github.com/2012/01/06/vim-forcedotcom-syntax-highlighting.html"/>
   <updated>2012-01-06T00:00:00-08:00</updated>
   <id>http://ejholmes.github.com/2012/01/06/vim-forcedotcom-syntax-highlighting</id>
   <content type="html">&lt;p&gt;I despise Eclipse and the Force.com IDE; it's an extremely bloated piece of software. Thanks to &lt;a href=&quot;http://eclim.org/&quot;&gt;Eclim&lt;/a&gt;, it's possible to take advantage of the good parts of Eclipse but use VIM to edit apex classes, visualforce pages, etc.&lt;/p&gt;

&lt;p&gt;I've released a small set of VIM scripts for syntax highlighting Apex, Visualforce and Apex logs, which is available for &lt;a href=&quot;https://github.com/ejholmes/vim-forcedotcom&quot;&gt;download on Github&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Apex Class&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://d8y1gp0el652a.cloudfront.net/posts/2012-01-06-vim-forcedotcom-syntax-highlighting/apex.jpg&quot; alt=&quot;Apex&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;Visualforce Page&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://d8y1gp0el652a.cloudfront.net/posts/2012-01-06-vim-forcedotcom-syntax-highlighting/visualforce.jpg&quot; alt=&quot;Visualforce&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Installing Mac OS X Snow Leopard on ASUS P5N-E SLI</title>
   <link href="http://ejholmes.github.com/2011/08/29/installing-macosx-snow-leopard-on-asus-p5ne-sli.html"/>
   <updated>2011-08-29T00:00:00-07:00</updated>
   <id>http://ejholmes.github.com/2011/08/29/installing-macosx-snow-leopard-on-asus-p5ne-sli</id>
   <content type="html">&lt;h3&gt;Specs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.newegg.com/Product/Product.aspx?Item=N82E16813131142&quot;&gt;ASUS P5N-E SLI Motherboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.newegg.com/Product/Product.aspx?Item=N82E16819115017&quot;&gt;Intel Core 2 Quad Q6600&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.newegg.com/Product/Product.aspx?Item=N82E16822136770&quot;&gt;Western Digital Caviar Blue Hard Drive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NVIDIA GT 240&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/B00007IFED&quot;&gt;TRENDnet USB Ethernet adapter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;What you'll need&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://store.apple.com/us/product/MC573Z/A&quot;&gt;Snow Leopard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mediafire.com/?thd5nmo2oyn&quot;&gt;Empire EFI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE DVD Drive (SATA Drive's won't work, it will stall with &quot;Still waiting for root device&quot;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Instructions&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Burn Empire EFI Legacy (iBoot may also work using this method)&lt;/li&gt;
&lt;li&gt;Boot Empire EFI&lt;/li&gt;
&lt;li&gt;Remove Empire EFI from the DVD Drive. Insert Snow Leopard and press F5&lt;/li&gt;
&lt;li&gt;Press Enter to boot the Snow Leopard Installer&lt;/li&gt;
&lt;li&gt;Partition and format the hard drive then install Snow Leopard as normal&lt;/li&gt;
&lt;li&gt;When the installation is complete, remove Snow Leopard and re-insert Empire EFI into the DVD Drive&lt;/li&gt;
&lt;li&gt;Boot Empire EFI again. Select Snow Leopard and press Enter&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href=&quot;http://tonymacx86.blogspot.com/2010/04/iboot-multibeast-install-mac-os-x-on.html&quot;&gt;iBoot guide&lt;/a&gt; to install 10.6.8 combo update&lt;/li&gt;
&lt;li&gt;During MultiBeast setup, select the following:

&lt;ul&gt;
&lt;li&gt;EasyBeast&lt;/li&gt;
&lt;li&gt;System Utilities&lt;/li&gt;
&lt;li&gt;FakeSMC&lt;/li&gt;
&lt;li&gt;IOUSBFamily Rollback&lt;/li&gt;
&lt;li&gt;JMicron ATA&lt;/li&gt;
&lt;li&gt;PCIRootUID=1 Fix&lt;/li&gt;
&lt;li&gt;GraphicsEnabler=Yes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DO NOT REBOOT! Install
&lt;a href=&quot;https://dl.dropbox.com/u/1906634/Kexts.zip&quot;&gt;AppleNForceATA.kext&lt;/a&gt; to /Extras/Extensions&lt;/li&gt;
&lt;li&gt;Run: sudo chown -R root:wheel /Extras/Extensions/*&lt;/li&gt;
&lt;li&gt;Now run /Applications/Kext Utility.app&lt;/li&gt;
&lt;li&gt;Reboot and enjoy OS X 10.6.8!&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;You should now have working ethernet, and dual screen monitor support. I've yet to get my SATA DVD Drive to function.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Native Windows Controls in .NET</title>
   <link href="http://ejholmes.github.com/2010/04/05/native-windows-controls-with-dot-net.html"/>
   <updated>2010-04-05T00:00:00-07:00</updated>
   <id>http://ejholmes.github.com/2010/04/05/native-windows-controls-with-dot-net</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;http://farm5.static.flickr.com/4067/4492960730_4226e218ab_o.jpg&quot; class=&quot;right&quot; /&gt;
I came across a very frustrating issue while writing &lt;a href=&quot;http://ejholmes.github.com/uTorrent-Notifier/&quot;&gt;uTorrent Notifier&lt;/a&gt;; the fact that the default context menu/main menu controls look absolutely hideous. They use the Office 2007 look and feel and I think I speak for most people when I say that Office 2007 was not exactly the holy grail of good design. However, the Windows Vista/7 context menu's look very sleek.&lt;/p&gt;

&lt;p&gt;So after endless google searches on the subject of integrating native Win32 controls with .NET I came across &lt;a href=&quot;http://www.codeproject.com/KB/vista/themedvistacontrols.aspx&quot;&gt;this&lt;/a&gt; post. It's actually really quite simple get native looking context menu's/main menu's in .NET, all it requires is using the &quot;Context Menu&quot; control rather than the &quot;Context Menu Strip&quot; control.&lt;/p&gt;

&lt;p&gt;In Visual C# Express 2008 you can add this to the toolbox by right clicking on the toolbox and selecting &quot;Customize&quot;, then look for the &quot;ContextMenu&quot; control and &quot;MainMenu&quot;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Arduino Focuser</title>
   <link href="http://ejholmes.github.com/2010/03/28/the-arduino-focuser.html"/>
   <updated>2010-03-28T00:00:00-07:00</updated>
   <id>http://ejholmes.github.com/2010/03/28/the-arduino-focuser</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;&lt;span class=&quot;caps&quot;&gt;UPDATE&lt;/span&gt;:&lt;/strong&gt; The Ardunio Focuser was just featured in the October issue of Astronomy Now magazine in the UK. Read about it on page 76-77!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://arduino.cc&quot;&gt;&lt;img class=&quot;right&quot; src=&quot;http://d8y1gp0el652a.cloudfront.net/posts/2010-03-28-the-arduino-focuser/arduino.jpg&quot; alt=&quot;Arduino&quot; /&gt;&lt;/a&gt;In case you’ve never heard of it, the “Arduino is a tool for the design and development of embedded computer systems, consisting of a simple open hardware design for a single-board microcontroller, with embedded I/O support and a standard programming language.” In other words, it kicks ass.&lt;/p&gt;
&lt;p&gt;This is where I decided to start my homemade &lt;span class=&quot;caps&quot;&gt;ASCOM&lt;/span&gt; compliant computerized focuser. My goal was to use the Arduino to control a single stepper motor that in turn would be controlled by auto focusing software such as MaximDL or FocusMax using an &lt;span class=&quot;caps&quot;&gt;ASCOM&lt;/span&gt; driver.&lt;/p&gt;
&lt;p&gt;This is where I decided to start my homemade &lt;a href=&quot;http://ascom-standards.org/&quot;&gt;&lt;span class=&quot;caps&quot;&gt;ASCOM&lt;/span&gt;&lt;/a&gt; compliant computerized focuser. My goal was to use the Arduino to control a single stepper motor that in turn would be controlled by auto focusing software such as MaximDL or FocusMax using an &lt;span class=&quot;caps&quot;&gt;ASCOM&lt;/span&gt; driver.&lt;/p&gt;
&lt;h2&gt;The Hardware&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.websequencediagrams.com/?lz=cGFydGljaXBhbnQgIkNvbXB1dGVyIiBhcyBob3N0CgASDUFyZHVpbm8AGQVhAAYGABIPZGFmcnVpdCBNb3RvciBTaGllbGQASAVzAAYFAEEOU3RlcHBlcgAnBgBuBW1vdG9yAGYOVGVsZXNjb3BlIEZvY3VzAIEVB2YABgYKCm5vdGUgb3ZlcgA1BwBzB2lzIGEgZ2VhcmVkIHMAYQYKAFgGIGZyb20gYW4gT3Jpb24gRVEtM00gCiBkcml2ZQplbmQgbm90ZQoKAIFYBy0tPgCBNAY6IAoAgT0GLS0-AIF0BzogAG4RLACBEAgAfQpjb25uZWN0ZWQgdmlhCiBhIHNoYWZ0IGNvdXBsZQCBCAYKAIB_EACAfw4gCgpob3N0AG0LVVNCIEMAUgZpb24gKFZpcnR1YWwgQ09NIHBvcnQpAIEkCD4AgkwFOiBEQjkgU2VyaWFsIENhYmxlIChwd3IsIGduZCwgKzQgcGlucyk&amp;amp;s=napkin&quot;&gt;&lt;img src=&quot;http://www.websequencediagrams.com/cgi-bin/cdraw?lz=cGFydGljaXBhbnQgIkNvbXB1dGVyIiBhcyBob3N0CgASDUFyZHVpbm8AGQVhAAYGABIPZGFmcnVpdCBNb3RvciBTaGllbGQASAVzAAYFAEEOU3RlcHBlcgAnBgBuBW1vdG9yAGYOVGVsZXNjb3BlIEZvY3VzAIEVB2YABgYKCm5vdGUgb3ZlcgA1BwBzB2lzIGEgZ2VhcmVkIHMAYQYKAFgGIGZyb20gYW4gT3Jpb24gRVEtM00gCiBkcml2ZQplbmQgbm90ZQoKAIFYBy0tPgCBNAY6IAoAgT0GLS0-AIF0BzogAG4RLACBEAgAfQpjb25uZWN0ZWQgdmlhCiBhIHNoYWZ0IGNvdXBsZQCBCAYKAIB_EACAfw4gCgpob3N0AG0LVVNCIEMAUgZpb24gKFZpcnR1YWwgQ09NIHBvcnQpAIEkCD4AgkwFOiBEQjkgU2VyaWFsIENhYmxlIChwd3IsIGduZCwgKzQgcGlucyk&amp;amp;s=napkin&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The stepper motor I’m using is an old stepper I had from a single axis drive system for and EQ3 mount, which is a high resolution (geared) stepper motor.&lt;br /&gt;
In order to control the stepper motor, I came across a &lt;a href=&quot;http://www.ladyada.net/make/mshield/&quot;&gt;motor shield&lt;/a&gt; by Adafruit Industries. It also included a &lt;a href=&quot;http://www.ladyada.net/make/mshield/use.html&quot;&gt;library&lt;/a&gt; for microstepping, which made it ideal for high precision focus control. The stepper motor is connected to the Arduino board via the motor shield through an RS232 cable.&lt;/p&gt;
&lt;h2&gt;The Software&lt;/h2&gt;
&lt;p&gt;The software can be found at &lt;a href=&quot;https://github.com/ejholmes/Arduino-Focuser&quot;&gt;https://github.com/ejholmes/Arduino-Focuser&lt;/a&gt;. The code is licensed under the &lt;span class=&quot;caps&quot;&gt;GPL&lt;/span&gt; V2, so feel free to use it freely, but please mention my initial project!&lt;/p&gt;
&lt;h2&gt;The Final Product&lt;/h2&gt;
&lt;p&gt;It supports absolute positioning of the focuser up to around 13,000 points (on my focuser) of focus.&lt;div class=&quot;flash&quot;&gt;&lt;object width=&quot;410&quot; height=&quot;252&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/buo05pGONkw&amp;hl=en_US&amp;fs=1&amp;&quot;&gt;&lt;/param&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;&gt;&lt;/param&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot;&gt;&lt;/param&gt;&lt;embed src=&quot;http://www.youtube.com/v/buo05pGONkw&amp;hl=en_US&amp;fs=1&amp;&quot; type=&quot;application/x-shockwave-flash&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; width=&quot;410&quot; height=&quot;252&quot;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;/p&gt;</content>
 </entry>
 
 
</feed>
